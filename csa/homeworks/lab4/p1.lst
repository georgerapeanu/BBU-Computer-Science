     1                                  ;@author: Rapeanu George - Alexandru(#8 in group list)
     2                                  ;Exercise 8:
     3                                  ;Given the words A and B, compute the byte C as follows:
     4                                  ;
     5                                  ;    the bits 0-5 are the same as the bits 5-10 of A
     6                                  ;    the bits 6-7 are the same as the bits 1-2 of B.
     7                                  ;
     8                                  ;Compute the doubleword D as follows:
     9                                  ;
    10                                  ;    the bits 8-15 are the same as the bits of C
    11                                  ;    the bits 0-7 are the same as the bits 8-15 of B
    12                                  ;    the bits 24-31 are the same as the bits 0-7 of A
    13                                  ;    the bits 16-23 are the same as the bits 8-15 of A.
    14                                  
    15                                  
    16                                  
    17                                  bits 32 ; assembling for the 32 bits architecture
    18                                  
    19                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
    20                                  global start        
    21                                  
    22                                  ; declare external functions needed by our program
    23                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    24                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    25                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    26                                  
    27                                  extern printf
    28                                  import printf msvcrt.dll
    29                                                            
    30                                  ; our data is declared here (the variables needed by our program)
    31                                  segment data use32 class=data
    32 00000000 3FA2                        a dw 1010_0010_0011_1111b
    33 00000002 6B43                        b dw 0100_0011_0110_1011b
    34 00000004 00                          c db 0                          ;should be 0101_0001b = 0x51
    35 00000005 00000000                    d dd 0                          ;should be 0011_1111_1010_0010_0101_0001_0100_0011 = 0x3fa25143
    36 00000009 256868780D0A00              fmtByte db "%hhx",0xd,0xa,0x0
    37 00000010 25780D0A00                  fmtDword db "%x",0xd,0xa,0x0
    38                                  
    39                                  ; our code starts here
    40                                  segment code use32 class=code
    41                                      start:
    42                                          ; ...
    43                                          
    44 00000000 66A1[00000000]                  mov ax, word[a]
    45 00000006 66C1E805                        shr ax, 5
    46 0000000A 6683E03F                        and ax, word 0000_0000_0011_1111b
    47 0000000E 0805[04000000]                  or byte[c], al
    48                                          
    49 00000014 66A1[02000000]                  mov ax, word[b]
    50 0000001A 66D1E8                          shr ax, 1
    51 0000001D 6683E003                        and ax, word 0000_0000_0000_0011b
    52 00000021 66C1E006                        shl ax, 6
    53 00000025 0805[04000000]                  or byte[c], al
    54                                          
    55 0000002B 0FB605[04000000]                movzx eax, byte[c]
    56                                          
    57 00000032 50                              push eax
    58 00000033 68[09000000]                    push fmtByte
    59 00000038 FF15[00000000]                  call [printf]
    60 0000003E 83C408                          add esp,8
    61                                          
    62 00000041 0FB605[04000000]                movzx eax, byte[c]
    63 00000048 C1E008                          shl eax, 8
    64 0000004B 0905[05000000]                  or dword[d], eax
    65                                          
    66 00000051 0FB605[03000000]                movzx eax, byte[b + 1]
    67 00000058 0905[05000000]                  or dword[d], eax
    68                                          
    69 0000005E 0FB605[00000000]                movzx eax, byte[a]
    70 00000065 C1E018                          shl eax, 24
    71 00000068 0905[05000000]                  or dword[d], eax
    72                                          
    73 0000006E 0FB605[01000000]                movzx eax, byte[a + 1]
    74 00000075 C1E010                          shl eax, 16
    75 00000078 0905[05000000]                  or dword[d], eax        
    76                                          
    77 0000007E A1[05000000]                    mov eax, dword[d]
    78                                          
    79 00000083 50                              push eax
    80 00000084 68[10000000]                    push fmtDword
    81 00000089 FF15[00000000]                  call [printf]
    82 0000008F 83C408                          add esp,8
    83                                          
    84 00000092 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    85 00000094 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
