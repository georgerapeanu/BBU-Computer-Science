     1                                  ;@author: Rapeanu George - Alexandru(#8 in group list)
     2                                  ;Simple exercises
     3                                  ;Exercise 22: 16/4 
     4                                  
     5                                  
     6                                  bits 32 ; assembling for the 32 bits architecture
     7                                  
     8                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     9                                  global start        
    10                                  
    11                                  ; declare external functions needed by our program
    12                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    13                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    14                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    15                                  
    16                                  extern printf
    17                                  import printf msvcrt.dll
    18                                                            
    19                                  ; our data is declared here (the variables needed by our program)
    20                                  segment data use32 class=data
    21                                      
    22 00000000 256868640D0A                fmt db "%hhd",0xd,0xa
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          ; ...
    28                                      
    29 00000000 31C0                            xor eax, eax
    30 00000002 31D2                            xor edx, edx
    31                                          
    32 00000004 B010                            mov al,16
    33 00000006 B304                            mov bl,4
    34 00000008 F6F3                            div bl
    35                                          
    36 0000000A 50                              push eax
    37 0000000B 68[00000000]                    push fmt
    38 00000010 FF15[00000000]                  call [printf]
    39 00000016 83C408                          add esp,8
    40                                          
    41 00000019 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    42 0000001B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
