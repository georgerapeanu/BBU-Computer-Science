     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                  import printf msvcrt 
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 257800                      fmt db "%x",0x0
    14 00000003 FDFF0000                    x dd 0fffdh
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18                                          ; ...
    19                                          
    20 00000000 66B84A05                        mov ax, 054ah
    21 00000004 663D4A05                        cmp ax, 54ah
    22 00000008 7514                            jne a2
    23                                          
    24 0000000A B800000000                      mov eax, 0
    25                                          
    26 0000000F 50                              push eax
    27 00000010 68[00000000]                    push fmt
    28                                          
    29 00000015 FF15[00000000]                  call [printf]
    30 0000001B 83C408                          add esp, 8
    31                                          
    32                                          a2:
    33                                          
    34                                          ; exit(0)
    35 0000001E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    36 00000020 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
    37                                   
