     1                                  ;@author: Rapeanu George - Alexandru(#8 in group list)
     2                                  ;Exercise 8: A character string S is given. Obtain the string D that contains all capital letters of the string S.
     3                                  
     4                                  
     5                                  bits 32 ; assembling for the 32 bits architecture
     6                                  
     7                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     8                                  global start        
     9                                  
    10                                  ; declare external functions needed by our program
    11                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
    12                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    13                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    14                                  
    15                                  extern printf
    16                                  import printf msvcrt.dll
    17                                                            
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20 00000000 614162423225784D            s db 'a', 'A', 'b', 'B', '2', '%', 'x', 'M'
    21                                      lenS equ $ - s
    22 00000008 00<rept>                    d times lenS db 0
    23 00000010 256300                      fmtChar db "%c",0x0
    24 00000013 25640D0A                    fmtDword db "%d",0xd,0xa
    25                                  
    26                                  ; our code starts here
    27                                  segment code use32 class=code
    28                                      start:
    29                                          ; ...
    30                                          
    31 00000000 B90A000000                      mov ecx, 10
    32                                          testLoop:
    33 00000005 90<rept>                            times 0x100 db 0x90
    34 00000105 51                                  push ecx
    35 00000106 68[13000000]                        push fmtDword
    36 0000010B FF15[00000000]                      call [printf]
    37 00000111 83C404                              add esp, 4
    38 00000114 59                                  pop ecx
    39 00000115 49                                  dec ecx
    40 00000116 83F900                              cmp ecx, 0
    41 00000119 7405                                jz doneTestLoop
    42 0000011B E9E5FEFFFF                          jmp testLoop
    43                                          doneTestLoop:
    44                                          
    45 00000120 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    46 00000122 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
