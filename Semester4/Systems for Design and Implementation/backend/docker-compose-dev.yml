version: "3.9"
services:
  database:
    image: "postgres:15.2"
    ports:
      - "5432:5432"
    volumes:
      - sdi-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME}"]
      interval: 5s
      timeout: 3s
      retries: 3
  liquibase:
    image: "liquibase/liquibase:4.20"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./src/main/resources/db/changelog/:/liquibase/changelog/
    env_file:
      - .env
    environment:
      - LIQUIBASE_COMMAND_URL=${DATABASE_DRIVER}://database:5432/main
      - LIQUIBASE_COMMAND_USERNAME=${DATABASE_USERNAME}
      - LIQUIBASE_COMMAND_PASSWORD=${DATABASE_PASSWORD}
      - LIQUIBASE_COMMAND_CHANGELOG_FILE=db.changelog-master.yaml
      - LIQUIBASE_COMMAND_TAG=${TARGET_TAG}
    command:
      - update-to-tag
  ai:
    build: ../ai-microservice/
    ports:
      - "5000:5000"
  web:
    image: "tomcat:11.0"
    ports:
      - "8080:8080"
    depends_on:
      liquibase:
        condition: service_completed_successfully
      ai:
        condition: service_started
    env_file:
      - .env
    environment:
      - spring.profiles.active=dev
      - spring.datasource.password=${DATABASE_PASSWORD}
      - spring.datasource.username=${DATABASE_USERNAME}
      - spring.datasource.name=postgres=${DATABASE_PLATFORM}
      - spring.sql.init.platform=${DATABASE_PLATFORM}
      - spring.datasource.url=${DATABASE_DRIVER}://database:5432/main
      - JWT_SECRET=${JWT_SECRET}
      - sql_script.full_path=/schema1m.sql
      - ai_url=http://ai:5000
    volumes:
      - ./target/${APP_NAME}.war:/usr/local/tomcat/webapps/ROOT.war
      - ${SQL_SCRIPT_FULL_PATH}:/schema1m.sql

  nginx:
    image: "nginx:1.24.0"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./sdi.crt:/etc/nginx/ssl/sdi.crt
      - ./sdi.key:/etc/nginx/ssl/sdi.key
    depends_on:
      web:
        condition: service_started

volumes:
  sdi-postgres:
    external: true