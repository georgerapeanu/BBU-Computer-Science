        -:    0:Source:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a5-6-georgerapeanu/tests/domain/DynamicVectorTests.cpp
        -:    0:Graph:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a5-6-georgerapeanu/cmake-build-debug-coverage/tests/CMakeFiles/a5_6_georgerapeanu_tests.dir/domain/DynamicVectorTests.cpp.gcno
        -:    0:Data:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a5-6-georgerapeanu/cmake-build-debug-coverage/tests/CMakeFiles/a5_6_georgerapeanu_tests.dir/domain/DynamicVectorTests.cpp.gcda
        -:    0:Runs:1
        -:    1:/*!
        -:    2: * @file DynamicVectorTests.cpp this file contains the implementation for the DynamicVector tests
        -:    3: */
        -:    4:
        -:    5:#pragma once
        -:    6:#include "gtest/gtest.h"
        -:    7:#include "Exceptions.h"
        -:    8:#include "DynamicVector.h"
        -:    9:#include <string>
        -:   10:#include <cassert>
        -:   11:#include <algorithm>
        -:   12:
        4:   13:TEST(DynamicVectorTests, generic_test3) {
        2:   14:    DynamicVector<std::string> v(5, "aaa");
        1:   15:    DynamicVector<std::string> v2(v);
        1:   16:    DynamicVector<std::string> v3;
        1:   17:    v3 = v;
        1:   18:    v2[2] = "vvv";
        1:   19:    v3[3] = "bbb";
       1*:   20:    ASSERT_EQ(v.size(), 5);
        6:   21:    for (int i = 0; i < (int) v.size(); i++) {
       5*:   22:        ASSERT_EQ(v[i], "aaa");
        5:   23:        if (i != 2) {
       4*:   24:            ASSERT_EQ(v2[i], "aaa");
        -:   25:        }
        5:   26:        if (i != 3) {
       4*:   27:            ASSERT_EQ(v3[i], "aaa");
        -:   28:        }
        -:   29:    }
       1*:   30:    ASSERT_EQ(v2[2], "vvv");
       1*:   31:    ASSERT_EQ(v3[3], "bbb");
        1:   32:    v2.remove(0);
       1*:   33:    ASSERT_EQ(v2.size(), 4);
        5:   34:    for (int i = 0; i < (int) v2.size(); i++) {
        4:   35:        if (i != 1) {
       3*:   36:            ASSERT_EQ(v2[i], "aaa");
        -:   37:        } else {
       1*:   38:            ASSERT_EQ(v2[i], "vvv");
        -:   39:        }
        -:   40:    }
       2*:   41:    EXPECT_THROW(v2.remove(10), DynamicVectorException);
        1:   42:    v2.resize(5);
       1*:   43:    ASSERT_EQ(v2.size(), 5);
        5:   44:    for(int i = 0;i < 4;i++){
        4:   45:        if(i != 1){
       3*:   46:            ASSERT_EQ(v2[i], "aaa");
        -:   47:        }else{
       1*:   48:            ASSERT_EQ(v2[i], "vvv");
        -:   49:        }
        -:   50:    }
       1*:   51:    ASSERT_EQ(v2[4], "");
        1:   52:    v2.resize(1);
       1*:   53:    ASSERT_EQ(v2.size(), 1);
       1*:   54:    ASSERT_EQ(v2[0], "aaa");
        1:   55:    auto tmp_func = [&](const DynamicVector<std::string> &v){
       2*:   56:        ASSERT_EQ(v[0], "aaa");
        1:   56-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   56-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   56-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   56-block  3
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   56-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   56-block  5
call   19 never executed
call   20 never executed
    $$$$$:   56-block  6
    $$$$$:   56-block  7
call   21 never executed
    $$$$$:   56-block  8
    $$$$$:   56-block  9
call   22 never executed
    $$$$$:   56-block 10
    $$$$$:   56-block 11
call   23 never executed
       2*:   57:        EXPECT_THROW(v[1], DynamicVectorException);
        1:   57-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1
branch  3 taken 0
        1:   57-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   57-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   57-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:   57-block  4
call   12 never executed
        1:   57-block  5
branch 13 taken 0 (fallthrough)
branch 14 taken 1
    %%%%%:   57-block  6
call   15 never executed
branch 16 never executed
branch 17 never executed
    %%%%%:   57-block  7
    %%%%%:   57-block  8
call   18 never executed
branch 19 never executed
branch 20 never executed
    %%%%%:   57-block  9
call   21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
    %%%%%:   57-block 10
call   25 never executed
branch 26 never executed
branch 27 never executed
    %%%%%:   57-block 11
call   28 never executed
call   29 never executed
        1:   57-block 12
call   30 returned 1
        1:   57-block 13
call   31 returned 1
call   32 returned 1
branch 33 taken 1 (fallthrough)
branch 34 taken 0 (throw)
    $$$$$:   57-block 14
call   35 never executed
call   36 never executed
branch 37 never executed
branch 38 never executed
    $$$$$:   57-block 15
call   39 never executed
branch 40 never executed
branch 41 never executed
    $$$$$:   57-block 16
call   42 never executed
branch 43 never executed
branch 44 never executed
    $$$$$:   57-block 17
call   45 never executed
call   46 never executed
branch 47 never executed
branch 48 never executed
    $$$$$:   57-block 18
call   49 never executed
call   50 never executed
branch 51 never executed
branch 52 never executed
    $$$$$:   57-block 19
call   53 never executed
branch 54 never executed
branch 55 never executed
    $$$$$:   57-block 20
call   56 never executed
    $$$$$:   57-block 21
call   57 never executed
call   58 never executed
branch 59 never executed
branch 60 never executed
    $$$$$:   57-block 22
call   61 never executed
branch 62 never executed
branch 63 never executed
    $$$$$:   57-block 23
call   64 never executed
    $$$$$:   57-block 24
    $$$$$:   57-block 25
call   65 never executed
    $$$$$:   57-block 26
call   66 never executed
    $$$$$:   57-block 27
call   67 never executed
    $$$$$:   57-block 28
    $$$$$:   57-block 29
call   68 never executed
    $$$$$:   57-block 30
    $$$$$:   57-block 31
call   69 never executed
        -:   58:    };
        1:   59:    tmp_func(v2);
       1*:   60:    ASSERT_NE(v2, v);
       1*:   61:    ASSERT_EQ(v3, v3);
        -:   62:}
------------------
_ZN37DynamicVectorTests_generic_test3_TestC2Ev:
function _ZN37DynamicVectorTests_generic_test3_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(DynamicVectorTests, generic_test3) {
        1:   13-block  0
call    0 returned 1
------------------
_ZN37DynamicVectorTests_generic_test3_TestD0Ev:
function _ZN37DynamicVectorTests_generic_test3_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(DynamicVectorTests, generic_test3) {
        1:   13-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN37DynamicVectorTests_generic_test3_TestD2Ev:
function _ZN37DynamicVectorTests_generic_test3_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   13:TEST(DynamicVectorTests, generic_test3) {
        1:   13-block  0
call    0 returned 1
------------------
_ZN37DynamicVectorTests_generic_test3_Test8TestBodyEv:
function _ZN37DynamicVectorTests_generic_test3_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:   13:TEST(DynamicVectorTests, generic_test3) {
        2:   14:    DynamicVector<std::string> v(5, "aaa");
        1:   14-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   14-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 1
    $$$$$:   14-block  2
    $$$$$:   14-block  3
    $$$$$:   14-block  4
call    8 never executed
        1:   15:    DynamicVector<std::string> v2(v);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   15-block  0
call    3 never executed
        1:   16:    DynamicVector<std::string> v3;
        1:   16-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   16-block  1
call    3 never executed
        1:   17:    v3 = v;
        1:   17-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   18:    v2[2] = "vvv";
        1:   18-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   18-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   19:    v3[3] = "bbb";
        1:   19-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   19-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
       1*:   20:    ASSERT_EQ(v.size(), 5);
        1:   20-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   20-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   20-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   20-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   20-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   20-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   20-block  6
call   19 never executed
call   20 never executed
    $$$$$:   20-block  7
    $$$$$:   20-block  8
    $$$$$:   20-block  9
call   21 never executed
    $$$$$:   20-block 10
    $$$$$:   20-block 11
call   22 never executed
    $$$$$:   20-block 12
    $$$$$:   20-block 13
call   23 never executed
        6:   21:    for (int i = 0; i < (int) v.size(); i++) {
        1:   21-block  0
        6:   21-block  1
call    0 returned 6
branch  1 taken 6 (fallthrough)
branch  2 taken 0 (throw)
        6:   21-block  2
branch  3 taken 5 (fallthrough)
branch  4 taken 1
        5:   21-block  3
       5*:   22:        ASSERT_EQ(v[i], "aaa");
        5:   22-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   22-block  1
call    3 returned 5
branch  4 taken 5 (fallthrough)
branch  5 taken 0 (throw)
        5:   22-block  2
call    6 returned 5
branch  7 taken 0 (fallthrough)
branch  8 taken 5
    %%%%%:   22-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   22-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   22-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   22-block  6
call   19 never executed
call   20 never executed
    $$$$$:   22-block  7
call   21 never executed
    $$$$$:   22-block  8
    $$$$$:   22-block  9
call   22 never executed
    $$$$$:   22-block 10
    $$$$$:   22-block 11
call   23 never executed
        5:   23:        if (i != 2) {
        5:   23-block  0
branch  0 taken 4
branch  1 taken 1
       4*:   24:            ASSERT_EQ(v2[i], "aaa");
        4:   24-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   24-block  1
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   24-block  2
call    6 returned 4
branch  7 taken 0 (fallthrough)
branch  8 taken 4
    %%%%%:   24-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   24-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   24-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   24-block  6
call   19 never executed
call   20 never executed
    $$$$$:   24-block  7
call   21 never executed
    $$$$$:   24-block  8
    $$$$$:   24-block  9
call   22 never executed
    $$$$$:   24-block 10
    $$$$$:   24-block 11
call   23 never executed
        -:   25:        }
        5:   26:        if (i != 3) {
        5:   26-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 1
       4*:   27:            ASSERT_EQ(v3[i], "aaa");
        4:   27-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   27-block  1
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   27-block  2
call    6 returned 4
branch  7 taken 0 (fallthrough)
branch  8 taken 4
    %%%%%:   27-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   27-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   27-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   27-block  6
call   19 never executed
call   20 never executed
    $$$$$:   27-block  7
call   21 never executed
    $$$$$:   27-block  8
    $$$$$:   27-block  9
call   22 never executed
    $$$$$:   27-block 10
    $$$$$:   27-block 11
call   23 never executed
        -:   28:        }
        -:   29:    }
       1*:   30:    ASSERT_EQ(v2[2], "vvv");
        1:   30-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   30-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   30-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   30-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   30-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   30-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   30-block  6
call   19 never executed
call   20 never executed
    $$$$$:   30-block  7
call   21 never executed
    $$$$$:   30-block  8
    $$$$$:   30-block  9
call   22 never executed
    $$$$$:   30-block 10
    $$$$$:   30-block 11
call   23 never executed
       1*:   31:    ASSERT_EQ(v3[3], "bbb");
        1:   31-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   31-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   31-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   31-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   31-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   31-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   31-block  6
call   19 never executed
call   20 never executed
    $$$$$:   31-block  7
call   21 never executed
    $$$$$:   31-block  8
    $$$$$:   31-block  9
call   22 never executed
    $$$$$:   31-block 10
    $$$$$:   31-block 11
call   23 never executed
        1:   32:    v2.remove(0);
        1:   32-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   33:    ASSERT_EQ(v2.size(), 4);
        1:   33-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   33-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   33-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   33-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   33-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   33-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   33-block  6
call   19 never executed
call   20 never executed
    $$$$$:   33-block  7
    $$$$$:   33-block  8
    $$$$$:   33-block  9
call   21 never executed
    $$$$$:   33-block 10
    $$$$$:   33-block 11
call   22 never executed
    $$$$$:   33-block 12
    $$$$$:   33-block 13
call   23 never executed
        5:   34:    for (int i = 0; i < (int) v2.size(); i++) {
        1:   34-block  0
        5:   34-block  1
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   34-block  2
branch  3 taken 4 (fallthrough)
branch  4 taken 1
        4:   34-block  3
        4:   35:        if (i != 1) {
        4:   35-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 1
       3*:   36:            ASSERT_EQ(v2[i], "aaa");
        3:   36-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   36-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   36-block  2
call    6 returned 3
branch  7 taken 0 (fallthrough)
branch  8 taken 3
    %%%%%:   36-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   36-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   36-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   36-block  6
call   19 never executed
call   20 never executed
    $$$$$:   36-block  7
call   21 never executed
    $$$$$:   36-block  8
    $$$$$:   36-block  9
call   22 never executed
    $$$$$:   36-block 10
    $$$$$:   36-block 11
call   23 never executed
        -:   37:        } else {
       1*:   38:            ASSERT_EQ(v2[i], "vvv");
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   38-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   38-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   38-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   38-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   38-block  6
call   19 never executed
call   20 never executed
    $$$$$:   38-block  7
call   21 never executed
    $$$$$:   38-block  8
    $$$$$:   38-block  9
call   22 never executed
    $$$$$:   38-block 10
    $$$$$:   38-block 11
call   23 never executed
        -:   39:        }
        -:   40:    }
       2*:   41:    EXPECT_THROW(v2.remove(10), DynamicVectorException);
        1:   41-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   41-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   41-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   41-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
        1:   41-block  4
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   41-block  5
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   41-block  6
    %%%%%:   41-block  7
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   41-block  8
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:   41-block  9
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   41-block 10
call   27 never executed
call   28 never executed
        1:   41-block 11
call   29 returned 1
        1:   41-block 12
call   30 returned 1
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
    $$$$$:   41-block 13
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   41-block 14
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   41-block 15
call   41 never executed
branch 42 never executed
branch 43 never executed
    $$$$$:   41-block 16
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
    $$$$$:   41-block 17
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
    $$$$$:   41-block 18
call   52 never executed
branch 53 never executed
branch 54 never executed
    $$$$$:   41-block 19
call   55 never executed
    $$$$$:   41-block 20
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
    $$$$$:   41-block 21
call   60 never executed
branch 61 never executed
branch 62 never executed
    $$$$$:   41-block 22
call   63 never executed
    $$$$$:   41-block 23
    $$$$$:   41-block 24
call   64 never executed
    $$$$$:   41-block 25
call   65 never executed
    $$$$$:   41-block 26
call   66 never executed
    $$$$$:   41-block 27
    $$$$$:   41-block 28
call   67 never executed
    $$$$$:   41-block 29
    $$$$$:   41-block 30
call   68 never executed
        1:   42:    v2.resize(5);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   43:    ASSERT_EQ(v2.size(), 5);
        1:   43-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   43-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   43-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   43-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   43-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   43-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   43-block  6
call   19 never executed
call   20 never executed
    $$$$$:   43-block  7
    $$$$$:   43-block  8
    $$$$$:   43-block  9
call   21 never executed
    $$$$$:   43-block 10
    $$$$$:   43-block 11
call   22 never executed
    $$$$$:   43-block 12
    $$$$$:   43-block 13
call   23 never executed
        5:   44:    for(int i = 0;i < 4;i++){
        1:   44-block  0
        5:   44-block  1
branch  0 taken 4 (fallthrough)
branch  1 taken 1
        4:   44-block  2
        4:   45:        if(i != 1){
        4:   45-block  0
branch  0 taken 3 (fallthrough)
branch  1 taken 1
       3*:   46:            ASSERT_EQ(v2[i], "aaa");
        3:   46-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   46-block  1
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:   46-block  2
call    6 returned 3
branch  7 taken 0 (fallthrough)
branch  8 taken 3
    %%%%%:   46-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   46-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   46-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   46-block  6
call   19 never executed
call   20 never executed
    $$$$$:   46-block  7
call   21 never executed
    $$$$$:   46-block  8
    $$$$$:   46-block  9
call   22 never executed
    $$$$$:   46-block 10
    $$$$$:   46-block 11
call   23 never executed
        -:   47:        }else{
       1*:   48:            ASSERT_EQ(v2[i], "vvv");
        1:   48-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   48-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   48-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   48-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   48-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   48-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   48-block  6
call   19 never executed
call   20 never executed
    $$$$$:   48-block  7
call   21 never executed
    $$$$$:   48-block  8
    $$$$$:   48-block  9
call   22 never executed
    $$$$$:   48-block 10
    $$$$$:   48-block 11
call   23 never executed
        -:   49:        }
        -:   50:    }
       1*:   51:    ASSERT_EQ(v2[4], "");
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   51-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   51-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   51-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   51-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   51-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   51-block  6
call   19 never executed
call   20 never executed
    $$$$$:   51-block  7
call   21 never executed
    $$$$$:   51-block  8
    $$$$$:   51-block  9
call   22 never executed
    $$$$$:   51-block 10
    $$$$$:   51-block 11
call   23 never executed
        1:   52:    v2.resize(1);
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   53:    ASSERT_EQ(v2.size(), 1);
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   53-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   53-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   53-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   53-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   53-block  6
call   19 never executed
call   20 never executed
    $$$$$:   53-block  7
    $$$$$:   53-block  8
    $$$$$:   53-block  9
call   21 never executed
    $$$$$:   53-block 10
    $$$$$:   53-block 11
call   22 never executed
    $$$$$:   53-block 12
    $$$$$:   53-block 13
call   23 never executed
       1*:   54:    ASSERT_EQ(v2[0], "aaa");
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   54-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   54-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   54-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   54-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   54-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   54-block  6
call   19 never executed
call   20 never executed
    $$$$$:   54-block  7
call   21 never executed
    $$$$$:   54-block  8
    $$$$$:   54-block  9
call   22 never executed
    $$$$$:   54-block 10
    $$$$$:   54-block 11
call   23 never executed
        -:   55:    auto tmp_func = [&](const DynamicVector<std::string> &v){
        -:   56:        ASSERT_EQ(v[0], "aaa");
        -:   57:        EXPECT_THROW(v[1], DynamicVectorException);
        -:   58:    };
        1:   59:    tmp_func(v2);
        1:   59-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   60:    ASSERT_NE(v2, v);
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   60-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   60-block  3
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:   60-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   60-block  5
call   16 never executed
call   17 never executed
    $$$$$:   60-block  6
call   18 never executed
    $$$$$:   60-block  7
    $$$$$:   60-block  8
call   19 never executed
    $$$$$:   60-block  9
    $$$$$:   60-block 10
call   20 never executed
       1*:   61:    ASSERT_EQ(v3, v3);
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   61-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   61-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   61-block  3
call    9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:   61-block  4
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   61-block  5
call   16 never executed
call   17 never executed
    $$$$$:   61-block  6
call   18 never executed
    $$$$$:   61-block  7
    $$$$$:   61-block  8
call   19 never executed
    $$$$$:   61-block  9
    $$$$$:   61-block 10
call   20 never executed
        -:   62:}
------------------
        -:   63:
        4:   64:TEST(DynamicVectorTests, generic_test2) {
        1:   65:    DynamicVector<std::string> v(10);
       1*:   66:    ASSERT_EQ(v.size(), 10);
       11:   67:    for(int i = 0;i < (int)v.size();i++){
      20*:   68:        ASSERT_EQ(v[i], std::string());
        -:   69:    }
       2*:   70:    EXPECT_THROW(v[-1], DynamicVectorException);
       2*:   71:    EXPECT_THROW(v[10], DynamicVectorException);
        -:   72:
       11:   73:    while(v.size() > 0){
       10:   74:        v.pop_back();
        -:   75:    }
       2*:   76:    EXPECT_THROW(v.pop_back(), DynamicVectorException);
        -:   77:}
------------------
_ZN37DynamicVectorTests_generic_test2_TestC2Ev:
function _ZN37DynamicVectorTests_generic_test2_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   64:TEST(DynamicVectorTests, generic_test2) {
        1:   64-block  0
call    0 returned 1
------------------
_ZN37DynamicVectorTests_generic_test2_TestD0Ev:
function _ZN37DynamicVectorTests_generic_test2_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   64:TEST(DynamicVectorTests, generic_test2) {
        1:   64-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN37DynamicVectorTests_generic_test2_TestD2Ev:
function _ZN37DynamicVectorTests_generic_test2_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   64:TEST(DynamicVectorTests, generic_test2) {
        1:   64-block  0
call    0 returned 1
------------------
_ZN37DynamicVectorTests_generic_test2_Test8TestBodyEv:
function _ZN37DynamicVectorTests_generic_test2_Test8TestBodyEv called 1 returned 100% blocks executed 29%
        1:   64:TEST(DynamicVectorTests, generic_test2) {
        1:   65:    DynamicVector<std::string> v(10);
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   65-block  1
call    3 never executed
       1*:   66:    ASSERT_EQ(v.size(), 10);
        1:   66-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   66-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   66-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   66-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   66-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   66-block  6
call   19 never executed
call   20 never executed
    $$$$$:   66-block  7
    $$$$$:   66-block  8
    $$$$$:   66-block  9
call   21 never executed
    $$$$$:   66-block 10
    $$$$$:   66-block 11
call   22 never executed
    $$$$$:   66-block 12
    $$$$$:   66-block 13
call   23 never executed
       11:   67:    for(int i = 0;i < (int)v.size();i++){
        1:   67-block  0
       11:   67-block  1
call    0 returned 11
branch  1 taken 11 (fallthrough)
branch  2 taken 0 (throw)
       11:   67-block  2
branch  3 taken 10 (fallthrough)
branch  4 taken 1
       10:   67-block  3
      20*:   68:        ASSERT_EQ(v[i], std::string());
       10:   68-block  0
call    0 returned 10
call    1 returned 10
branch  2 taken 10 (fallthrough)
branch  3 taken 0 (throw)
       10:   68-block  1
call    4 returned 10
branch  5 taken 10 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 10
branch  8 taken 0 (fallthrough)
branch  9 taken 10
    %%%%%:   68-block  2
call   10 never executed
branch 11 never executed
branch 12 never executed
    %%%%%:   68-block  3
call   13 never executed
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   68-block  4
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   68-block  5
call   20 never executed
call   21 never executed
    $$$$$:   68-block  6
    $$$$$:   68-block  7
call   22 never executed
    $$$$$:   68-block  8
    $$$$$:   68-block  9
call   23 never executed
    $$$$$:   68-block 10
    $$$$$:   68-block 11
call   24 never executed
        -:   69:    }
       2*:   70:    EXPECT_THROW(v[-1], DynamicVectorException);
        1:   70-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   70-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   70-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   70-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
        1:   70-block  4
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   70-block  5
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   70-block  6
    %%%%%:   70-block  7
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   70-block  8
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:   70-block  9
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   70-block 10
call   27 never executed
call   28 never executed
        1:   70-block 11
call   29 returned 1
        1:   70-block 12
call   30 returned 1
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
    $$$$$:   70-block 13
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   70-block 14
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   70-block 15
call   41 never executed
branch 42 never executed
branch 43 never executed
    $$$$$:   70-block 16
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
    $$$$$:   70-block 17
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
    $$$$$:   70-block 18
call   52 never executed
branch 53 never executed
branch 54 never executed
    $$$$$:   70-block 19
call   55 never executed
    $$$$$:   70-block 20
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
    $$$$$:   70-block 21
call   60 never executed
branch 61 never executed
branch 62 never executed
    $$$$$:   70-block 22
call   63 never executed
    $$$$$:   70-block 23
    $$$$$:   70-block 24
call   64 never executed
    $$$$$:   70-block 25
call   65 never executed
    $$$$$:   70-block 26
call   66 never executed
    $$$$$:   70-block 27
    $$$$$:   70-block 28
call   67 never executed
    $$$$$:   70-block 29
    $$$$$:   70-block 30
call   68 never executed
       2*:   71:    EXPECT_THROW(v[10], DynamicVectorException);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   71-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   71-block  1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   71-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
        1:   71-block  3
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   71-block  4
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   71-block  5
    %%%%%:   71-block  6
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   71-block  7
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:   71-block  8
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   71-block  9
call   27 never executed
call   28 never executed
        1:   71-block 10
call   29 returned 1
        1:   71-block 11
call   30 returned 1
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
    $$$$$:   71-block 12
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   71-block 13
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   71-block 14
call   41 never executed
branch 42 never executed
branch 43 never executed
    $$$$$:   71-block 15
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
    $$$$$:   71-block 16
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
    $$$$$:   71-block 17
call   52 never executed
branch 53 never executed
branch 54 never executed
    $$$$$:   71-block 18
call   55 never executed
    $$$$$:   71-block 19
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
    $$$$$:   71-block 20
call   60 never executed
branch 61 never executed
branch 62 never executed
    $$$$$:   71-block 21
call   63 never executed
    $$$$$:   71-block 22
    $$$$$:   71-block 23
call   64 never executed
    $$$$$:   71-block 24
call   65 never executed
    $$$$$:   71-block 25
call   66 never executed
    $$$$$:   71-block 26
    $$$$$:   71-block 27
call   67 never executed
    $$$$$:   71-block 28
    $$$$$:   71-block 29
call   68 never executed
        -:   72:
       11:   73:    while(v.size() > 0){
       11:   73-block  0
call    0 returned 11
branch  1 taken 11 (fallthrough)
branch  2 taken 0 (throw)
       11:   73-block  1
branch  3 taken 10 (fallthrough)
branch  4 taken 1
       10:   73-block  2
       10:   74:        v.pop_back();
       10:   74-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
        -:   75:    }
       2*:   76:    EXPECT_THROW(v.pop_back(), DynamicVectorException);
        1:   76-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   76-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   76-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   76-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
        1:   76-block  4
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   76-block  5
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   76-block  6
    %%%%%:   76-block  7
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   76-block  8
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:   76-block  9
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   76-block 10
call   27 never executed
call   28 never executed
        1:   76-block 11
call   29 returned 1
        1:   76-block 12
call   30 returned 1
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
    $$$$$:   76-block 13
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   76-block 14
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   76-block 15
call   41 never executed
branch 42 never executed
branch 43 never executed
    $$$$$:   76-block 16
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
    $$$$$:   76-block 17
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
    $$$$$:   76-block 18
call   52 never executed
branch 53 never executed
branch 54 never executed
    $$$$$:   76-block 19
call   55 never executed
    $$$$$:   76-block 20
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
    $$$$$:   76-block 21
call   60 never executed
branch 61 never executed
branch 62 never executed
    $$$$$:   76-block 22
call   63 never executed
    $$$$$:   76-block 23
    $$$$$:   76-block 24
call   64 never executed
    $$$$$:   76-block 25
call   65 never executed
    $$$$$:   76-block 26
call   66 never executed
    $$$$$:   76-block 27
    $$$$$:   76-block 28
call   67 never executed
    $$$$$:   76-block 29
    $$$$$:   76-block 30
call   68 never executed
        -:   77:}
------------------
        -:   78:
        4:   79:TEST(DynamicVectorTests, generic_test1) {
        1:   80:    DynamicVector<std::string> v;
       1*:   81:    ASSERT_EQ(v.size(), 0);
        1:   82:    v.push_back("asfasfasfa");
       1*:   83:    ASSERT_EQ(v[0], "asfasfasfa");
        1:   84:    v.push_back("bbbb");
       1*:   85:    ASSERT_EQ(v[1], "bbbb");
        1:   86:    std::swap(v[0], v[1]);
       1*:   87:    ASSERT_EQ(v.size(), 2);
        1:   88:    v.pop_back();
       1*:   89:    ASSERT_EQ(v[0], "bbbb");
       1*:   90:    ASSERT_EQ(v.back(), "bbbb");
        1:   91:    v.back() = "a";
       1*:   92:    ASSERT_EQ(v.back(), "a");
        1:   93:    v.pop_back();
       2*:   94:    EXPECT_THROW(v.back(), DynamicVectorException);
        -:   95:}
------------------
_ZN37DynamicVectorTests_generic_test1_TestC2Ev:
function _ZN37DynamicVectorTests_generic_test1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   79:TEST(DynamicVectorTests, generic_test1) {
        1:   79-block  0
call    0 returned 1
------------------
_ZN37DynamicVectorTests_generic_test1_TestD0Ev:
function _ZN37DynamicVectorTests_generic_test1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   79:TEST(DynamicVectorTests, generic_test1) {
        1:   79-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN37DynamicVectorTests_generic_test1_TestD2Ev:
function _ZN37DynamicVectorTests_generic_test1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   79:TEST(DynamicVectorTests, generic_test1) {
        1:   79-block  0
call    0 returned 1
------------------
_ZN37DynamicVectorTests_generic_test1_Test8TestBodyEv:
function _ZN37DynamicVectorTests_generic_test1_Test8TestBodyEv called 1 returned 100% blocks executed 32%
        1:   79:TEST(DynamicVectorTests, generic_test1) {
        1:   80:    DynamicVector<std::string> v;
        1:   80-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   80-block  1
call    3 never executed
       1*:   81:    ASSERT_EQ(v.size(), 0);
        1:   81-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   81-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   81-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   81-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   81-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   81-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   81-block  6
call   19 never executed
call   20 never executed
    $$$$$:   81-block  7
    $$$$$:   81-block  8
    $$$$$:   81-block  9
call   21 never executed
    $$$$$:   81-block 10
    $$$$$:   81-block 11
call   22 never executed
    $$$$$:   81-block 12
    $$$$$:   81-block 13
call   23 never executed
        1:   82:    v.push_back("asfasfasfa");
        1:   82-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   82-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   82-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   82-block  3
call    9 never executed
    $$$$$:   82-block  4
    $$$$$:   82-block  5
call   10 never executed
    $$$$$:   82-block  6
       1*:   83:    ASSERT_EQ(v[0], "asfasfasfa");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   83-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   83-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   83-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   83-block  3
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   83-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   83-block  5
call   19 never executed
call   20 never executed
    $$$$$:   83-block  6
call   21 never executed
    $$$$$:   83-block  7
    $$$$$:   83-block  8
call   22 never executed
    $$$$$:   83-block  9
    $$$$$:   83-block 10
call   23 never executed
        1:   84:    v.push_back("bbbb");
        1:   84-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   84-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   84-block  2
call    7 returned 1
call    8 returned 1
    $$$$$:   84-block  3
call    9 never executed
    $$$$$:   84-block  4
    $$$$$:   84-block  5
call   10 never executed
    $$$$$:   84-block  6
       1*:   85:    ASSERT_EQ(v[1], "bbbb");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   85-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   85-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   85-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   85-block  3
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   85-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   85-block  5
call   19 never executed
call   20 never executed
    $$$$$:   85-block  6
call   21 never executed
    $$$$$:   85-block  7
    $$$$$:   85-block  8
call   22 never executed
    $$$$$:   85-block  9
    $$$$$:   85-block 10
call   23 never executed
        1:   86:    std::swap(v[0], v[1]);
        1:   86-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   86-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   86-block  2
call    6 returned 1
       1*:   87:    ASSERT_EQ(v.size(), 2);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   87-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   87-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   87-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   87-block  3
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   87-block  4
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   87-block  5
call   19 never executed
call   20 never executed
    $$$$$:   87-block  6
    $$$$$:   87-block  7
    $$$$$:   87-block  8
call   21 never executed
    $$$$$:   87-block  9
    $$$$$:   87-block 10
call   22 never executed
    $$$$$:   87-block 11
    $$$$$:   87-block 12
call   23 never executed
        1:   88:    v.pop_back();
        1:   88-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       1*:   89:    ASSERT_EQ(v[0], "bbbb");
        1:   89-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   89-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   89-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   89-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   89-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   89-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   89-block  6
call   19 never executed
call   20 never executed
    $$$$$:   89-block  7
call   21 never executed
    $$$$$:   89-block  8
    $$$$$:   89-block  9
call   22 never executed
    $$$$$:   89-block 10
    $$$$$:   89-block 11
call   23 never executed
       1*:   90:    ASSERT_EQ(v.back(), "bbbb");
        1:   90-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   90-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   90-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   90-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   90-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   90-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   90-block  6
call   19 never executed
call   20 never executed
    $$$$$:   90-block  7
call   21 never executed
    $$$$$:   90-block  8
    $$$$$:   90-block  9
call   22 never executed
    $$$$$:   90-block 10
    $$$$$:   90-block 11
call   23 never executed
        1:   91:    v.back() = "a";
        1:   91-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   91-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
       1*:   92:    ASSERT_EQ(v.back(), "a");
        1:   92-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   92-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   92-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   92-block  3
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   92-block  4
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
    %%%%%:   92-block  5
call   16 never executed
branch 17 never executed
branch 18 never executed
    %%%%%:   92-block  6
call   19 never executed
call   20 never executed
    $$$$$:   92-block  7
call   21 never executed
    $$$$$:   92-block  8
    $$$$$:   92-block  9
call   22 never executed
    $$$$$:   92-block 10
    $$$$$:   92-block 11
call   23 never executed
        1:   93:    v.pop_back();
        1:   93-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
       2*:   94:    EXPECT_THROW(v.back(), DynamicVectorException);
        1:   94-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   94-block  1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   94-block  2
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   94-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
        1:   94-block  4
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   94-block  5
call   14 never executed
branch 15 never executed
branch 16 never executed
    %%%%%:   94-block  6
    %%%%%:   94-block  7
call   17 never executed
branch 18 never executed
branch 19 never executed
    %%%%%:   94-block  8
call   20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
    %%%%%:   94-block  9
call   24 never executed
branch 25 never executed
branch 26 never executed
    %%%%%:   94-block 10
call   27 never executed
call   28 never executed
        1:   94-block 11
call   29 returned 1
        1:   94-block 12
call   30 returned 1
call   31 returned 1
branch 32 taken 1 (fallthrough)
branch 33 taken 0 (throw)
    $$$$$:   94-block 13
call   34 never executed
call   35 never executed
branch 36 never executed
branch 37 never executed
    $$$$$:   94-block 14
call   38 never executed
branch 39 never executed
branch 40 never executed
    $$$$$:   94-block 15
call   41 never executed
branch 42 never executed
branch 43 never executed
    $$$$$:   94-block 16
call   44 never executed
call   45 never executed
branch 46 never executed
branch 47 never executed
    $$$$$:   94-block 17
call   48 never executed
call   49 never executed
branch 50 never executed
branch 51 never executed
    $$$$$:   94-block 18
call   52 never executed
branch 53 never executed
branch 54 never executed
    $$$$$:   94-block 19
call   55 never executed
    $$$$$:   94-block 20
call   56 never executed
call   57 never executed
branch 58 never executed
branch 59 never executed
    $$$$$:   94-block 21
call   60 never executed
branch 61 never executed
branch 62 never executed
    $$$$$:   94-block 22
call   63 never executed
    $$$$$:   94-block 23
    $$$$$:   94-block 24
call   64 never executed
    $$$$$:   94-block 25
call   65 never executed
    $$$$$:   94-block 26
call   66 never executed
    $$$$$:   94-block 27
    $$$$$:   94-block 28
call   67 never executed
    $$$$$:   94-block 29
    $$$$$:   94-block 30
call   68 never executed
        -:   95:}
------------------
        -:   96:
        4:   97:TEST(DynamicVectorTests, test_eq) {
        1:   98:    DynamicVector<std::string> v;
        1:   99:    DynamicVector<std::string> v2;
        1:  100:    v.push_back("aaa");
        1:  101:    v2.push_back("aaa");
       1*:  102:    ASSERT_EQ(v, v2);
        1:  103:    v2.push_back("safasfsa");
       1*:  104:    ASSERT_NE(v, v2);
        1:  105:    v2.pop_back();
       1*:  106:    ASSERT_EQ(v, v2);
        1:  107:    v.push_back("bbb");
        1:  108:    v2.push_back("ccc");
       1*:  109:    ASSERT_NE(v, v2);
        1:  110:    v.resize(0);
        1:  111:    v2.resize(0);
       1*:  112:    ASSERT_EQ(v, v2);
        -:  113:}
