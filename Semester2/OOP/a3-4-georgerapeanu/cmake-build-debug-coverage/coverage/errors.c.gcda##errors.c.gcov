        -:    0:Source:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/src/domain/errors.c
        -:    0:Graph:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/cmake-build-debug-coverage/CMakeFiles/a3_4_georgerapeanu_tests.dir/src/domain/errors.c.gcno
        -:    0:Data:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/cmake-build-debug-coverage/CMakeFiles/a3_4_georgerapeanu_tests.dir/src/domain/errors.c.gcda
        -:    0:Runs:1
        -:    1:/*! @file errors.c contains the implementation for errors.h
        -:    2: *
        -:    3: */
        -:    4:
        -:    5:#pragma once
        -:    6:#include "../../include/domain/errors.h"
        -:    7:#include <stdlib.h>
        -:    8:
        -:    9://! this is a vector containing all error codes
        -:   10:const error_t errors[] = {
        -:   11:{"Success!", 0},
        -:   12:{"Unable to allocate more memory(bad_alloc)", 1},
        -:   13:{"Vector element size invalid", 1},
        -:   14:{"Vector size invalid", 1},
        -:   15:{"Vector new capacity is less than old capacity", 1},
        -:   16:{"A pop was attempted on an empty vector", 1},
        -:   17:{"Attempted to access an index which is not in vector", 1},
        -:   18:{"Invalid index in repository", 1},
        -:   19:{"Country with specified name already exists", 0},
        -:   20:{"Country population cannot be negative", 0},
        -:   21:{"Continent does not exist", 0},
        -:   22:{"Country with specified name doesn't exist", 0},
        -:   23:{"Source country cannot be the same with destination country", 0},
        -:   24:{"Source country population is less than migrated population", 0},
        -:   25:{"New population cannot be negative", 0},
        -:   26:{"Sort order invalid", 0},
        -:   27:{"Invalid address", 1},
        -:   28:{"Command does not follow format", 0},
        -:   29:{"Args has wrong size", 1},
        -:   30:{"Cannot undo any further", 0},
        -:   31:{"Cannot redo any further", 0}
        -:   32:};
        -:   33:
        -:   34:/*
        -:   35: * Does exactly what it says it does in errors.h
        -:   36: */
function set_error called 92 returned 100% blocks executed 100%
       92:   37:void set_error(int* p_error, int error_code){
       92:   38:    if(p_error != NULL){
       92:   38-block  0
branch  0 taken 88 (fallthrough)
branch  1 taken 4
       88:   39:        *p_error = error_code;
       88:   39-block  0
        -:   40:    }
       92:   41:}
