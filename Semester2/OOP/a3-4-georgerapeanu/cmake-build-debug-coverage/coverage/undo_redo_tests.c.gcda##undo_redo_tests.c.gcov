        -:    0:Source:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/tests/src/controller/undo_redo_tests.c
        -:    0:Graph:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/cmake-build-debug-coverage/CMakeFiles/a3_4_georgerapeanu_tests.dir/tests/src/controller/undo_redo_tests.c.gcno
        -:    0:Data:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/cmake-build-debug-coverage/CMakeFiles/a3_4_georgerapeanu_tests.dir/tests/src/controller/undo_redo_tests.c.gcda
        -:    0:Runs:1
        -:    1:#include <assert.h>
        -:    2:#include <string.h>
        -:    3:#include <stdio.h>
        -:    4:#include "../../include/controller/undo_redo_tests.h"
        -:    5:#include "../../../include/repository/repository.h"
        -:    6:#include "../../../include/domain/country.h"
        -:    7:#include "../../../include/repository/undo_redo_repository.h"
        -:    8:#include "../../../include/controller/country_controller.h"
        -:    9:#include "../../../include/controller/undo_redo_controller.h"
        -:   10:
function undo_redo_test1 called 1 returned 100% blocks executed 63%
        1:   11:void undo_redo_test1(){
        1:   12:    int tmp_error = 0;
        1:   13:    repository_t* p_repository = create_repository(sizeof(country_t),&delete_country_data,NULL);
        1:   13-block  0
call    0 returned 1
        1:   14:    undo_redo_repository_t* p_undo_redo_repository = create_undo_redo_repository(NULL);
call    0 returned 1
        1:   15:    country_controller_t* p_controller = create_country_controller(p_repository, p_undo_redo_repository, NULL);
call    0 returned 1
        1:   16:    undo_redo_controller_t* p_undo_redo_controller = create_undo_redo_controller(p_undo_redo_repository, NULL);
call    0 returned 1
        -:   17:
        -:   18:    country_t* p_countries[100]; /// for test uses
        -:   19:
        1:   20:    add_country_ui(p_controller,"c1", "invalid", 10, 1, NULL);
call    0 returned 1
        1:   21:    add_country_ui(p_controller,"c1", "america", 10, 1, NULL);
call    0 returned 1
        1:   22:    add_country_ui(p_controller,"c1", "invalid", 10, 1, NULL);
call    0 returned 1
        1:   23:    add_country_ui(p_controller,"c2", "invalid", 10, 1, NULL);
call    0 returned 1
        1:   24:    add_country_ui(p_controller, "c2", "africa", 200, 1, NULL);
call    0 returned 1
        -:   25:
       1*:   26:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   26-block  0
call    2 never executed
        1:   27:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:   27-block  0
call    0 returned 1
        1:   28:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:   29:    assert(strcmp(p_countries[0]->name, "c1") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   29-block  0
call    2 never executed
       1*:   30:    assert(strcmp(p_countries[0]->continent, "america") == 0);
        1:   30-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   30-block  1
call    2 never executed
       1*:   31:    assert(p_countries[0]->population == 10);
        1:   31-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   31-block  1
call    2 never executed
       1*:   32:    assert(strcmp(p_countries[1]->name, "c2") == 0);
        1:   32-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   32-block  1
call    2 never executed
       1*:   33:    assert(strcmp(p_countries[1]->continent, "africa") == 0);
        1:   33-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   33-block  1
call    2 never executed
       1*:   34:    assert(p_countries[1]->population == 200);
        1:   34-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   34-block  1
call    2 never executed
        -:   35:
        1:   36:    undo(p_undo_redo_controller, NULL);
        1:   36-block  0
call    0 returned 1
       1*:   37:    assert(p_repository->p_elements->size == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   37-block  0
call    2 never executed
        1:   38:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:   38-block  0
call    0 returned 1
       1*:   39:    assert(strcmp(p_countries[0]->name, "c1") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   39-block  0
call    2 never executed
       1*:   40:    assert(strcmp(p_countries[0]->continent, "america") == 0);
        1:   40-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   40-block  1
call    2 never executed
       1*:   41:    assert(p_countries[0]->population == 10);
        1:   41-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   41-block  1
call    2 never executed
        1:   42:    redo(p_undo_redo_controller, NULL);
        1:   42-block  0
call    0 returned 1
        -:   43:
       1*:   44:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   44-block  0
call    2 never executed
        1:   45:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:   45-block  0
call    0 returned 1
        1:   46:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:   47:    assert(strcmp(p_countries[0]->name, "c1") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   47-block  0
call    2 never executed
       1*:   48:    assert(strcmp(p_countries[0]->continent, "america") == 0);
        1:   48-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   48-block  1
call    2 never executed
       1*:   49:    assert(p_countries[0]->population == 10);
        1:   49-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   49-block  1
call    2 never executed
       1*:   50:    assert(strcmp(p_countries[1]->name, "c2") == 0);
        1:   50-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   50-block  1
call    2 never executed
       1*:   51:    assert(strcmp(p_countries[1]->continent, "africa") == 0);
        1:   51-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   51-block  1
call    2 never executed
       1*:   52:    assert(p_countries[1]->population == 200);
        1:   52-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   52-block  1
call    2 never executed
        1:   53:    undo(p_undo_redo_controller, NULL);
        1:   53-block  0
call    0 returned 1
        -:   54:
        1:   55:    remove_country_ui(p_controller, "c2", 1, &tmp_error);
call    0 returned 1
       1*:   56:    assert(tmp_error == 11);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   56-block  0
call    2 never executed
        1:   57:    tmp_error = 0;
        1:   58:    remove_country_ui(p_controller, "c1", 1, &tmp_error);
        1:   58-block  0
call    0 returned 1
        1:   59:    redo(p_undo_redo_controller, &tmp_error);
call    0 returned 1
       1*:   60:    assert(tmp_error == 20);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   60-block  0
call    2 never executed
        1:   61:    tmp_error = 0;
        -:   62:
       1*:   63:    assert(p_repository->p_elements->size == 0);
        1:   63-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   63-block  1
call    2 never executed
        1:   64:    undo(p_undo_redo_controller, NULL);
        1:   64-block  0
call    0 returned 1
        1:   65:    add_country_ui(p_controller, "c3", "europe", 100, 1, NULL);
call    0 returned 1
        1:   66:    migrate_ui(p_controller, "c3", "c2", 10, 1, &tmp_error);
call    0 returned 1
       1*:   67:    assert(tmp_error == 11);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   67-block  0
call    2 never executed
        1:   68:    migrate_ui(p_controller, "c3", "c1", 10, 1, &tmp_error);
        1:   68-block  0
call    0 returned 1
       1*:   69:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   69-block  0
call    2 never executed
        1:   70:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:   70-block  0
call    0 returned 1
        1:   71:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:   72:    assert(strcmp(p_countries[0]->name, "c1") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   72-block  0
call    2 never executed
       1*:   73:    assert(strcmp(p_countries[0]->continent, "america") == 0);
        1:   73-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   73-block  1
call    2 never executed
       1*:   74:    assert(p_countries[0]->population == 20);
        1:   74-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   74-block  1
call    2 never executed
       1*:   75:    assert(strcmp(p_countries[1]->name, "c3") == 0);
        1:   75-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   75-block  1
call    2 never executed
       1*:   76:    assert(strcmp(p_countries[1]->continent, "europe") == 0);
        1:   76-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   76-block  1
call    2 never executed
       1*:   77:    assert(p_countries[1]->population == 90);
        1:   77-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   77-block  1
call    2 never executed
        -:   78:
        1:   79:    remove_country_ui(p_controller, "c1", 1, NULL);
        1:   79-block  0
call    0 returned 1
        -:   80:
        1:   81:    update_country_ui(p_controller, "c1", 100, 1, &tmp_error);
call    0 returned 1
       1*:   82:    assert(tmp_error == 11);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   82-block  0
call    2 never executed
        1:   83:    tmp_error = 0;
        1:   84:    update_country_ui(p_controller, "c3", 100, 1, &tmp_error);
        1:   84-block  0
call    0 returned 1
       1*:   85:    assert(p_repository->p_elements->size == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   85-block  0
call    2 never executed
        1:   86:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:   86-block  0
call    0 returned 1
       1*:   87:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   87-block  0
call    2 never executed
       1*:   88:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:   88-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   88-block  1
call    2 never executed
       1*:   89:    assert(p_countries[0]->population == 100);
        1:   89-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   89-block  1
call    2 never executed
        1:   90:    add_country_ui(p_controller, "c4", "australia", 1300, 1, NULL);
        1:   90-block  0
call    0 returned 1
        1:   91:    migrate_ui(p_controller, "c4", "c3", 200, 1, NULL);
call    0 returned 1
       1*:   92:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   92-block  0
call    2 never executed
        1:   93:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:   93-block  0
call    0 returned 1
        1:   94:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:   95:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   95-block  0
call    2 never executed
       1*:   96:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:   96-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   96-block  1
call    2 never executed
       1*:   97:    assert(p_countries[0]->population == 300);
        1:   97-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   97-block  1
call    2 never executed
       1*:   98:    assert(strcmp(p_countries[1]->name, "c4") == 0);
        1:   98-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   98-block  1
call    2 never executed
       1*:   99:    assert(strcmp(p_countries[1]->continent, "australia") == 0);
        1:   99-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:   99-block  1
call    2 never executed
       1*:  100:    assert(p_countries[1]->population == 1100);
        1:  100-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  100-block  1
call    2 never executed
        -:  101:
        -:  102:    /* Right now the active operations are:
        -:  103:     * add_country_ui(p_controller,"c1", "america", 10, 1, NULL); -> (c1, america, 10)
        -:  104:     * add_country_ui(p_controller, "c3", "europe", 100, 1, NULL); -> (c1, america, 10), (c3, europe, 100)
        -:  105:     * migrate_ui(p_controller, "c3", "c1", 10, 1, &tmp_error); -> (c1, america, 20), (c3, europe, 90)
        -:  106:     * remove_country_ui(p_controller, "c1", 1, NULL); -> (c3, europe, 90)
        -:  107:     * update_country_ui(p_controller, "c3", 100, 1, &tmp_error); -> (c3, europe, 100)
        -:  108:     * add_country_ui(p_controller, "c4", "australia", 1300, 1, NULL); -> (c3, europe, 100), (c4, australia, 1300)
        -:  109:     * migrate_ui(p_controller, "c4", "c3", 200, 1, NULL); -> (c3, europe ,300), (c4, australia, 1100)
        -:  110:     */
        -:  111:
        1:  112:    undo(p_undo_redo_controller, NULL);
        1:  112-block  0
call    0 returned 1
       1*:  113:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  113-block  0
call    2 never executed
        1:  114:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:  114-block  0
call    0 returned 1
        1:  115:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:  116:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  116-block  0
call    2 never executed
       1*:  117:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:  117-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  117-block  1
call    2 never executed
       1*:  118:    assert(p_countries[0]->population == 100);
        1:  118-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  118-block  1
call    2 never executed
       1*:  119:    assert(strcmp(p_countries[1]->name, "c4") == 0);
        1:  119-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  119-block  1
call    2 never executed
       1*:  120:    assert(strcmp(p_countries[1]->continent, "australia") == 0);
        1:  120-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  120-block  1
call    2 never executed
       1*:  121:    assert(p_countries[1]->population == 1300);
        1:  121-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  121-block  1
call    2 never executed
        -:  122:
        1:  123:    undo(p_undo_redo_controller, NULL);
        1:  123-block  0
call    0 returned 1
       1*:  124:    assert(p_repository->p_elements->size == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  124-block  0
call    2 never executed
        1:  125:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:  125-block  0
call    0 returned 1
       1*:  126:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  126-block  0
call    2 never executed
       1*:  127:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:  127-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  127-block  1
call    2 never executed
       1*:  128:    assert(p_countries[0]->population == 100);
        1:  128-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  128-block  1
call    2 never executed
        -:  129:
        1:  130:    undo(p_undo_redo_controller, NULL);
        1:  130-block  0
call    0 returned 1
       1*:  131:    assert(p_repository->p_elements->size == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  131-block  0
call    2 never executed
        1:  132:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:  132-block  0
call    0 returned 1
       1*:  133:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  133-block  0
call    2 never executed
       1*:  134:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:  134-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  134-block  1
call    2 never executed
       1*:  135:    assert(p_countries[0]->population == 90);
        1:  135-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  135-block  1
call    2 never executed
        -:  136:
        1:  137:    undo(p_undo_redo_controller, NULL);
        1:  137-block  0
call    0 returned 1
       1*:  138:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  138-block  0
call    2 never executed
        1:  139:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:  139-block  0
call    0 returned 1
        1:  140:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:  141:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  141-block  0
call    2 never executed
       1*:  142:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:  142-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  142-block  1
call    2 never executed
       1*:  143:    assert(p_countries[0]->population == 90);
        1:  143-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  143-block  1
call    2 never executed
       1*:  144:    assert(strcmp(p_countries[1]->name, "c1") == 0);
        1:  144-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  144-block  1
call    2 never executed
       1*:  145:    assert(strcmp(p_countries[1]->continent, "america") == 0);
        1:  145-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  145-block  1
call    2 never executed
       1*:  146:    assert(p_countries[1]->population == 20);
        1:  146-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  146-block  1
call    2 never executed
        -:  147:
        1:  148:    undo(p_undo_redo_controller, NULL);
        1:  148-block  0
call    0 returned 1
       1*:  149:    assert(p_repository->p_elements->size == 2);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  149-block  0
call    2 never executed
        1:  150:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:  150-block  0
call    0 returned 1
        1:  151:    p_countries[1] = (country_t*)get_position_repository(p_repository, 1, NULL);
call    0 returned 1
       1*:  152:    assert(strcmp(p_countries[0]->name, "c3") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  152-block  0
call    2 never executed
       1*:  153:    assert(strcmp(p_countries[0]->continent, "europe") == 0);
        1:  153-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  153-block  1
call    2 never executed
       1*:  154:    assert(p_countries[0]->population == 100);
        1:  154-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  154-block  1
call    2 never executed
       1*:  155:    assert(strcmp(p_countries[1]->name, "c1") == 0);
        1:  155-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  155-block  1
call    2 never executed
       1*:  156:    assert(strcmp(p_countries[1]->continent, "america") == 0);
        1:  156-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  156-block  1
call    2 never executed
       1*:  157:    assert(p_countries[1]->population == 10);
        1:  157-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  157-block  1
call    2 never executed
        -:  158:
        1:  159:    undo(p_undo_redo_controller, NULL);
        1:  159-block  0
call    0 returned 1
       1*:  160:    assert(p_repository->p_elements->size == 1);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  160-block  0
call    2 never executed
        1:  161:    p_countries[0] = (country_t*)get_position_repository(p_repository, 0, NULL);
        1:  161-block  0
call    0 returned 1
       1*:  162:    assert(strcmp(p_countries[0]->name, "c1") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  162-block  0
call    2 never executed
       1*:  163:    assert(strcmp(p_countries[0]->continent, "america") == 0);
        1:  163-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  163-block  1
call    2 never executed
       1*:  164:    assert(p_countries[0]->population == 10);
        1:  164-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  164-block  1
call    2 never executed
        -:  165:
        1:  166:    undo(p_undo_redo_controller, NULL);
        1:  166-block  0
call    0 returned 1
       1*:  167:    assert(p_repository->p_elements->size == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  167-block  0
call    2 never executed
        -:  168:
        1:  169:    undo(p_undo_redo_controller, &tmp_error);
        1:  169-block  0
call    0 returned 1
       1*:  170:    assert(tmp_error == 19);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    %%%%%:  170-block  0
call    2 never executed
        1:  171:    tmp_error = 0;
        -:  172:
        1:  173:    delete_undo_redo_controller(p_undo_redo_controller);
        1:  173-block  0
call    0 returned 1
        1:  174:    delete_country_controller(p_controller);
call    0 returned 1
        1:  175:    delete_repository(p_repository);
call    0 returned 1
        1:  176:    delete_undo_redo_repository(p_undo_redo_repository);
call    0 returned 1
        1:  177:}
        -:  178:
function undo_redo_test_all called 1 returned 100% blocks executed 100%
        1:  179:void undo_redo_test_all(){
        1:  180:    undo_redo_test1();
        1:  180-block  0
call    0 returned 1
        1:  181:}
