        -:    0:Source:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a14-georgerapeanu/src/controller/MovieController.cpp
        -:    0:Graph:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a14-georgerapeanu/cmake-build-debug-coverage/tests/CMakeFiles/a14_georgerapeanu_tests.dir/__/src/controller/MovieController.cpp.gcno
        -:    0:Data:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a14-georgerapeanu/cmake-build-debug-coverage/tests/CMakeFiles/a14_georgerapeanu_tests.dir/__/src/controller/MovieController.cpp.gcda
        -:    0:Runs:1
        -:    1:/*!
        -:    2: * @file MovieController.cpp this file contains the implementations for MovieController
        -:    3: */
        -:    4:
        -:    5://
        -:    6:// Created by georgerapeanu on 21.03.2022.
        -:    7://
        -:    8:
        -:    9:#pragma once
        -:   10:
        -:   11:#include <cstdlib>
        -:   12:#include <cstring>
        -:   13:#include <algorithm>
        -:   14:#include "CSVWatchlist.h"
        -:   15:#include "HTMLWatchlist.h"
        -:   16:#include "MovieController.h"
        -:   17:#include "MemoryRepository.h"
        -:   18:#include "Movie.h"
        -:   19:#include "Exceptions.h"
        -:   20:#include "AddMovieAction.h"
        -:   21:#include "RemoveMovieAction.h"
        -:   22:#include "UpdateMovieAction.h"
        -:   23:#include "AbstractMovieAction.h"
        -:   24:
        -:   25:using namespace std;
        -:   26:
function _ZN15MovieControllerC2ER18AbstractRepositoryI5MovieER17AbstractWatchlistIS1_ER16UndoActionsStack called 24 returned 100% blocks executed 100%
       24:   27:MovieController::MovieController(AbstractRepository<Movie> &repository, AbstractWatchlist<Movie> &watchlist, UndoActionsStack& undo_stack):watchlist(watchlist), repository(repository), undo_stack(undo_stack) {
       24:   28:}
        -:   29:
function _ZN15MovieControllerD2Ev called 24 returned 100% blocks executed 100%
       24:   30:MovieController::~MovieController() {
        -:   31:    ;
       24:   32:}
        -:   33:
        -:   34:void
function _ZN15MovieController15add_movie_adminERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RKiS9_S7_ called 122 returned 99% blocks executed 68%
      122:   35:MovieController::add_movie_admin(const std::string &title, const std::string &genre, const int &year, const int &likes,
        -:   36:                                 const std::string &trailer_link) {
        -:   37:    try{
      125:   38:        this->repository.add(Movie(my_tolower(title), my_tolower(genre), year, likes, trailer_link));
      122:   38-block  0
call    0 returned 122
branch  1 taken 122 (fallthrough)
branch  2 taken 0 (throw)
      122:   38-block  1
call    3 returned 122
branch  4 taken 122 (fallthrough)
branch  5 taken 0 (throw)
      122:   38-block  2
call    6 returned 122
branch  7 taken 122 (fallthrough)
branch  8 taken 0 (throw)
      122:   38-block  3
call    9 returned 122
branch 10 taken 121 (fallthrough)
branch 11 taken 1 (throw)
      121:   38-block  4
call   12 returned 121
call   13 returned 121
call   14 returned 121
        1:   38-block  5
call   15 returned 1
        1:   38-block  6
        1:   38-block  7
call   16 returned 1
        1:   38-block  8
        1:   38-block  9
call   17 returned 1
        1:   38-block 10
        2:   39:    }catch(const RepositoryException& exception){
        1:   39-block  0
call    0 returned 1
    $$$$$:   39-block  1
call    1 never executed
        1:   39-block  2
call    2 returned 1
        1:   40:        if(exception.get_message() == "Id already exists"){
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   40-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
        1:   41:            throw MovieControllerException("Movie already exists");
        1:   41-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   41-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   41-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:   41-block  3
call   11 never executed
    $$$$$:   41-block  4
    $$$$$:   41-block  5
call   12 never executed
    $$$$$:   41-block  6
    $$$$$:   41-block  7
call   13 never executed
        -:   42:        }
        -:   43:    }
      121:   44:    AbstractMovieAction* action = new AddMovieAction(Movie(my_tolower(title), my_tolower(genre), year, likes, trailer_link), this->repository, this->watchlist);
      121:   44-block  0
call    0 returned 121
call    1 returned 121
branch  2 taken 121 (fallthrough)
branch  3 taken 0 (throw)
      121:   44-block  1
call    4 returned 121
branch  5 taken 121 (fallthrough)
branch  6 taken 0 (throw)
      121:   44-block  2
call    7 returned 121
branch  8 taken 121 (fallthrough)
branch  9 taken 0 (throw)
      121:   44-block  3
call   10 returned 121
branch 11 taken 121 (fallthrough)
branch 12 taken 0 (throw)
      121:   44-block  4
call   13 returned 121
call   14 returned 121
call   15 returned 121
    $$$$$:   44-block  5
call   16 never executed
    $$$$$:   44-block  6
call   17 never executed
    $$$$$:   44-block  7
    $$$$$:   44-block  8
call   18 never executed
    $$$$$:   44-block  9
    $$$$$:   44-block 10
call   19 never executed
      121:   45:    undo_stack.push_back(action);
call    0 returned 121
      121:   46:}
        -:   47:
        -:   48:
function _ZN15MovieController18update_movie_adminERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_RKiS9_S7_ called 2 returned 50% blocks executed 77%
        2:   49:void MovieController::update_movie_admin(const std::string &title, const std::string &genre, const int &year,
        -:   50:                                         const int &likes, const std::string &trailer_link) {
        4:   51:    Movie tmp;
        2:   51-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        1:   51-block  1
call    3 returned 1
        1:   51-block  2
call    4 returned 1
        -:   52:    try{
        8:   53:        tmp = this->repository.find(Movie(my_tolower(title), "nop", year, 0, "nop"));
        2:   53-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   53-block  1
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   53-block  2
call    8 returned 2
branch  9 taken 2 (fallthrough)
branch 10 taken 0 (throw)
        2:   53-block  3
call   11 returned 2
branch 12 taken 2 (fallthrough)
branch 13 taken 0 (throw)
        2:   53-block  4
call   14 returned 2
branch 15 taken 1 (fallthrough)
branch 16 taken 1 (throw)
        1:   53-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   53-block  6
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:   53-block  7
call   27 never executed
    $$$$$:   53-block  8
        1:   53-block  9
call   28 returned 1
        1:   53-block 10
        1:   53-block 11
call   29 returned 1
        1:   53-block 12
        1:   53-block 13
call   30 returned 1
        1:   53-block 14
        1:   53-block 15
call   31 returned 1
        1:   53-block 16
        1:   53-block 17
        1:   53-block 18
call   32 returned 1
        1:   53-block 19
        1:   53-block 20
call   33 returned 1
        1:   53-block 21
        1:   54:    }catch(const RepositoryException& exception){
        1:   54-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:   55:        ;
        -:   56:    }
        -:   57:    try{
        5:   58:        this->repository.update(Movie(my_tolower(title), my_tolower(genre), year, likes, trailer_link));
        2:   58-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   58-block  1
call    3 returned 2
branch  4 taken 2 (fallthrough)
branch  5 taken 0 (throw)
        2:   58-block  2
call    6 returned 2
branch  7 taken 2 (fallthrough)
branch  8 taken 0 (throw)
        2:   58-block  3
call    9 returned 2
branch 10 taken 1 (fallthrough)
branch 11 taken 1 (throw)
        1:   58-block  4
call   12 returned 1
call   13 returned 1
call   14 returned 1
        1:   58-block  5
call   15 returned 1
        1:   58-block  6
        1:   58-block  7
call   16 returned 1
        1:   58-block  8
        1:   58-block  9
call   17 returned 1
        1:   58-block 10
        2:   59:    }catch(const RepositoryException& exception){
        1:   59-block  0
call    0 returned 1
    $$$$$:   59-block  1
call    1 never executed
branch  2 never executed
branch  3 never executed
        1:   59-block  2
call    4 returned 1
        1:   60:        if(exception.get_message() == "Id doesn't exist"){
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   60-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
        1:   61:            throw MovieControllerException("Movie doesn't exist");
        1:   61-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   61-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   61-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:   61-block  3
call   11 never executed
    $$$$$:   61-block  4
    $$$$$:   61-block  5
call   12 never executed
    $$$$$:   61-block  6
    $$$$$:   61-block  7
call   13 never executed
        -:   62:        }
        -:   63:    }
        -:   64:    try{
       4*:   65:        this->watchlist.update(Movie(my_tolower(title), my_tolower(genre), year, likes, trailer_link));
        1:   65-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   65-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   65-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   65-block  3
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
    %%%%%:   65-block  4
call   12 never executed
call   13 never executed
call   14 never executed
        1:   65-block  5
call   15 returned 1
        1:   65-block  6
        1:   65-block  7
call   16 returned 1
        1:   65-block  8
        1:   65-block  9
call   17 returned 1
        1:   65-block 10
        1:   66:    }catch (const RepositoryException &exception){
        1:   66-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:   67:        ;
        -:   68:    }
        1:   69:    AbstractMovieAction* action = new UpdateMovieAction(tmp, Movie(my_tolower(title), my_tolower(genre), year, likes, trailer_link), this->repository, this->watchlist);
        1:   69-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   69-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   69-block  2
call    6 returned 1
branch  7 taken 1 (fallthrough)
branch  8 taken 0 (throw)
        1:   69-block  3
call    9 returned 1
branch 10 taken 1 (fallthrough)
branch 11 taken 0 (throw)
        1:   69-block  4
call   12 returned 1
branch 13 taken 1 (fallthrough)
branch 14 taken 0 (throw)
        1:   69-block  5
call   15 returned 1
call   16 returned 1
call   17 returned 1
    $$$$$:   69-block  6
call   18 never executed
    $$$$$:   69-block  7
call   19 never executed
    $$$$$:   69-block  8
    $$$$$:   69-block  9
call   20 never executed
    $$$$$:   69-block 10
    $$$$$:   69-block 11
call   21 never executed
    $$$$$:   69-block 12
        1:   70:    undo_stack.push_back(action);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   71:}
        -:   72:
function _ZN15MovieController18remove_movie_adminERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKi called 2 returned 50% blocks executed 84%
        2:   73:void MovieController::remove_movie_admin(const std::string &title, const int &year) {
        4:   74:    Movie tmp;
        2:   74-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        1:   74-block  1
call    3 returned 1
        1:   74-block  2
call    4 returned 1
        -:   75:    try{
        8:   76:        tmp = this->repository.find(Movie(my_tolower(title), "nop", year, 0, "nop"));
        2:   76-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   76-block  1
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   76-block  2
call    8 returned 2
branch  9 taken 2 (fallthrough)
branch 10 taken 0 (throw)
        2:   76-block  3
call   11 returned 2
branch 12 taken 2 (fallthrough)
branch 13 taken 0 (throw)
        2:   76-block  4
call   14 returned 2
branch 15 taken 1 (fallthrough)
branch 16 taken 1 (throw)
        1:   76-block  5
call   17 returned 1
branch 18 taken 1 (fallthrough)
branch 19 taken 0 (throw)
        1:   76-block  6
call   20 returned 1
call   21 returned 1
call   22 returned 1
call   23 returned 1
call   24 returned 1
call   25 returned 1
call   26 returned 1
    $$$$$:   76-block  7
call   27 never executed
    $$$$$:   76-block  8
        1:   76-block  9
call   28 returned 1
        1:   76-block 10
        1:   76-block 11
call   29 returned 1
        1:   76-block 12
        1:   76-block 13
call   30 returned 1
        1:   76-block 14
        1:   76-block 15
call   31 returned 1
        1:   76-block 16
        1:   76-block 17
        1:   76-block 18
call   32 returned 1
        1:   76-block 19
        1:   76-block 20
call   33 returned 1
        1:   76-block 21
        1:   77:    }catch(const RepositoryException& exception){
        1:   77-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:   78:        ;
        -:   79:    }
        -:   80:    try{
        8:   81:        this->repository.remove(Movie(my_tolower(title), "nop", year, 0, "nop"));
        2:   81-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   81-block  1
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   81-block  2
call    8 returned 2
branch  9 taken 2 (fallthrough)
branch 10 taken 0 (throw)
        2:   81-block  3
call   11 returned 2
branch 12 taken 2 (fallthrough)
branch 13 taken 0 (throw)
        2:   81-block  4
call   14 returned 2
branch 15 taken 1 (fallthrough)
branch 16 taken 1 (throw)
        1:   81-block  5
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
        1:   81-block  6
call   23 returned 1
        1:   81-block  7
        1:   81-block  8
call   24 returned 1
        1:   81-block  9
        1:   81-block 10
call   25 returned 1
        1:   81-block 11
        1:   81-block 12
call   26 returned 1
        1:   81-block 13
        1:   81-block 14
        1:   81-block 15
call   27 returned 1
        1:   81-block 16
        1:   81-block 17
call   28 returned 1
        1:   81-block 18
        2:   82:    }catch(const RepositoryException& exception){
        1:   82-block  0
call    0 returned 1
    $$$$$:   82-block  1
call    1 never executed
branch  2 never executed
branch  3 never executed
        1:   82-block  2
call    4 returned 1
        1:   83:        if(exception.get_message() == "Id doesn't exist"){
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   83-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
        1:   84:            throw MovieControllerException("Movie doesn't exist");
        1:   84-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   84-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   84-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:   84-block  3
call   11 never executed
    $$$$$:   84-block  4
    $$$$$:   84-block  5
call   12 never executed
    $$$$$:   84-block  6
    $$$$$:   84-block  7
call   13 never executed
        -:   85:        }
        -:   86:    }
        -:   87:    try{
       7*:   88:        this->watchlist.remove(Movie(my_tolower(title), "nop", year, 0, "nop"));
        1:   88-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   88-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   88-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
        1:   88-block  3
call   11 returned 1
branch 12 taken 1 (fallthrough)
branch 13 taken 0 (throw)
        1:   88-block  4
call   14 returned 1
branch 15 taken 0 (fallthrough)
branch 16 taken 1 (throw)
    %%%%%:   88-block  5
call   17 never executed
call   18 never executed
call   19 never executed
call   20 never executed
call   21 never executed
call   22 never executed
        1:   88-block  6
call   23 returned 1
        1:   88-block  7
        1:   88-block  8
call   24 returned 1
        1:   88-block  9
        1:   88-block 10
call   25 returned 1
        1:   88-block 11
        1:   88-block 12
call   26 returned 1
        1:   88-block 13
        1:   88-block 14
        1:   88-block 15
call   27 returned 1
        1:   88-block 16
        1:   88-block 17
call   28 returned 1
        1:   88-block 18
        1:   89:    }catch (const RepositoryException &exception){
        1:   89-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        -:   90:        ;
        -:   91:    }
        1:   92:    AbstractMovieAction* action = new RemoveMovieAction(tmp, this->repository, this->watchlist);
        1:   92-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   92-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
    $$$$$:   92-block  2
call    6 never executed
        1:   93:    undo_stack.push_back(action);
        1:   93-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   94:}
        -:   95:
function _ZN15MovieController14get_movie_userERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKi called 2 returned 50% blocks executed 82%
        2:   96:Movie MovieController::get_movie_user(const std::string &title, const int &year) {
        -:   97:    try{
        9:   98:        return this->repository.find(Movie(my_tolower(title), "nop", year, 0, "nop"));
        2:   98-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   98-block  1
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   98-block  2
call    8 returned 2
branch  9 taken 2 (fallthrough)
branch 10 taken 0 (throw)
        2:   98-block  3
call   11 returned 2
branch 12 taken 2 (fallthrough)
branch 13 taken 0 (throw)
        2:   98-block  4
call   14 returned 2
branch 15 taken 1 (fallthrough)
branch 16 taken 1 (throw)
        1:   98-block  5
call   17 returned 1
call   18 returned 1
call   19 returned 1
call   20 returned 1
call   21 returned 1
call   22 returned 1
        1:   98-block  6
call   23 returned 1
        1:   98-block  7
        1:   98-block  8
call   24 returned 1
        1:   98-block  9
        1:   98-block 10
call   25 returned 1
        1:   98-block 11
        1:   98-block 12
call   26 returned 1
        1:   98-block 13
        1:   98-block 14
        1:   98-block 15
call   27 returned 1
        1:   98-block 16
        1:   98-block 17
call   28 returned 1
        1:   98-block 18
        2:   99:    }catch(const RepositoryException& exception){
        1:   99-block  0
call    0 returned 1
    $$$$$:   99-block  1
call    1 never executed
        1:   99-block  2
call    2 returned 1
        1:  100:        if(exception.get_message() == "Id doesn't exist"){
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  100-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
        1:  101:            throw MovieControllerException("Movie doesn't exist");
        1:  101-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  101-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  101-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:  101-block  3
call   11 never executed
    $$$$$:  101-block  4
    $$$$$:  101-block  5
call   12 never executed
    $$$$$:  101-block  6
    $$$$$:  101-block  7
call   13 never executed
        -:  102:        }
        -:  103:    }
    =====:  104:    return Movie();
call    0 never executed
        -:  105:}
        -:  106:
function _ZN15MovieController15get_movies_userENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 2 returned 100% blocks executed 73%
        2:  107:vector<Movie> MovieController::get_movies_user(const std::string genre) {
        4:  108:    vector<Movie> movies = this->repository.get_all();
        2:  108-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  108-block  1
call    3 returned 2
    $$$$$:  108-block  2
call    4 never executed
        2:  109:    vector<Movie> answer;
        2:  109-block  0
call    0 returned 2
function _ZZN15MovieController15get_movies_userENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlR5MovieE_clES7_ called 20 returned 100% blocks executed 62%
       20:  110:    copy_if(movies.begin(), movies.end(), back_inserter(answer), [&](Movie &movie){
       20:  111:        return genre == "" || my_tolower(movie.get_genre()) == my_tolower(genre);
       20:  111-block  0
call    0 returned 20
branch  1 taken 20 (fallthrough)
branch  2 taken 0
       20:  111-block  1
call    3 returned 20
branch  4 taken 20 (fallthrough)
branch  5 taken 0 (throw)
       20:  111-block  2
call    6 returned 20
branch  7 taken 20 (fallthrough)
branch  8 taken 0 (throw)
       20:  111-block  3
call    9 returned 20
branch 10 taken 20 (fallthrough)
branch 11 taken 0 (throw)
       20:  111-block  4
call   12 returned 20
branch 13 taken 2 (fallthrough)
branch 14 taken 18
        2:  111-block  5
       18:  111-block  6
       20:  111-block  7
branch 15 taken 20 (fallthrough)
branch 16 taken 0
       20:  111-block  8
call   17 returned 20
       20:  111-block  9
branch 18 taken 20 (fallthrough)
branch 19 taken 0
       20:  111-block 10
call   20 returned 20
       20:  111-block 11
branch 21 taken 20 (fallthrough)
branch 22 taken 0
       20:  111-block 12
call   23 returned 20
       20:  111-block 13
       20:  111-block 14
    $$$$$:  111-block 15
branch 24 never executed
branch 25 never executed
    $$$$$:  111-block 16
call   26 never executed
    $$$$$:  111-block 17
    $$$$$:  111-block 18
branch 27 never executed
branch 28 never executed
    $$$$$:  111-block 19
call   29 never executed
    $$$$$:  111-block 20
    $$$$$:  111-block 21
branch 30 never executed
branch 31 never executed
    $$$$$:  111-block 22
call   32 never executed
        2:  112:    });
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  112-block  0
call    3 returned 2
call    4 returned 2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        4:  113:    return answer;
        2:  113-block  0
        2:  113-block  1
        -:  114:}
        -:  115:
function _ZN15MovieController14add_movie_userERK5Movie called 10 returned 80% blocks executed 63%
       10:  116:void MovieController::add_movie_user(const Movie &movie) {
        -:  117:    try{
       10:  118:        this->watchlist.add(movie);
       10:  118-block  0
call    0 returned 10
branch  1 taken 8 (fallthrough)
branch  2 taken 2 (throw)
        4:  119:    }catch(const RepositoryException& exception){
        2:  119-block  0
call    0 returned 2
    $$$$$:  119-block  1
call    1 never executed
        2:  119-block  2
call    2 returned 2
        2:  120:        if(exception.get_message() == "Id already exists"){
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:  120-block  0
call    3 returned 2
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0
        2:  121:            throw MovieControllerException("Movie already in watchlist");
        2:  121-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:  121-block  1
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:  121-block  2
call    8 returned 2
call    9 returned 2
call   10 returned 2
    $$$$$:  121-block  3
call   11 never executed
    $$$$$:  121-block  4
    $$$$$:  121-block  5
call   12 never executed
    $$$$$:  121-block  6
    $$$$$:  121-block  7
call   13 never executed
        -:  122:        }
        -:  123:    }
        8:  124:}
        8:  124-block  0
        -:  125:
function _ZN15MovieController17remove_movie_userERK5Movie called 2 returned 50% blocks executed 63%
        2:  126:void MovieController::remove_movie_user(const Movie &movie) {
        -:  127:    try{
        2:  128:        this->watchlist.remove(movie);
        2:  128-block  0
call    0 returned 2
branch  1 taken 1 (fallthrough)
branch  2 taken 1 (throw)
        2:  129:    }catch(const RepositoryException& exception){
        1:  129-block  0
call    0 returned 1
    $$$$$:  129-block  1
call    1 never executed
        1:  129-block  2
call    2 returned 1
        1:  130:        if(exception.get_message() == "Id doesn't exist"){
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  130-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0
        1:  131:            throw MovieControllerException("Movie not in watchlist");
        1:  131-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:  131-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:  131-block  2
call    8 returned 1
call    9 returned 1
call   10 returned 1
    $$$$$:  131-block  3
call   11 never executed
    $$$$$:  131-block  4
    $$$$$:  131-block  5
call   12 never executed
    $$$$$:  131-block  6
    $$$$$:  131-block  7
call   13 never executed
        -:  132:        }
        -:  133:    }
        1:  134:}
        1:  134-block  0
        -:  135:
function _ZN15MovieController18get_watchlist_userEv called 4 returned 100% blocks executed 100%
        4:  136:vector<Movie> MovieController::get_watchlist_user() {
        4:  137:    return this->watchlist.get_all();
        4:  137-block  0
call    0 returned 4
        -:  138:}
        -:  139:
function _ZN15MovieController15like_movie_userERK5Movie called 2 returned 100% blocks executed 50%
        2:  140:void MovieController::like_movie_user(const Movie &movie) {
        2:  141:    this->repository.update(Movie(movie.get_title(), movie.get_genre(), movie.get_year(), movie.get_likes() + 1, movie.get_trailer_link()));
        2:  141-block  0
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:  141-block  1
call    4 returned 2
branch  5 taken 2 (fallthrough)
branch  6 taken 0 (throw)
        2:  141-block  2
call    7 returned 2
branch  8 taken 2 (fallthrough)
branch  9 taken 0 (throw)
        2:  141-block  3
call   10 returned 2
branch 11 taken 2 (fallthrough)
branch 12 taken 0 (throw)
        2:  141-block  4
call   13 returned 2
branch 14 taken 2 (fallthrough)
branch 15 taken 0 (throw)
        2:  141-block  5
call   16 returned 2
branch 17 taken 2 (fallthrough)
branch 18 taken 0 (throw)
        2:  141-block  6
call   19 returned 2
call   20 returned 2
call   21 returned 2
call   22 returned 2
    $$$$$:  141-block  7
call   23 never executed
    $$$$$:  141-block  8
    $$$$$:  141-block  9
call   24 never executed
    $$$$$:  141-block 10
    $$$$$:  141-block 11
call   25 never executed
    $$$$$:  141-block 12
    $$$$$:  141-block 13
    $$$$$:  141-block 14
    $$$$$:  141-block 15
call   26 never executed
        2:  142:}
        -:  143:
function _ZN15MovieController20get_all_movies_adminEv called 7 returned 100% blocks executed 100%
        7:  144:vector<Movie> MovieController::get_all_movies_admin() {
        7:  145:    return this->repository.get_all();
        7:  145-block  0
call    0 returned 7
        -:  146:}
        -:  147:
function _ZNK15MovieController10my_tolowerERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 545 returned 100% blocks executed 77%
      545:  148:std::string MovieController::my_tolower(const std::string &s) const {
      545:  149:    std::string ans = "";
      545:  149-block  0
call    0 returned 545
call    1 returned 545
branch  2 taken 545 (fallthrough)
branch  3 taken 0 (throw)
    $$$$$:  149-block  1
call    4 never executed
     6016:  150:    for(auto &it:s){
call    0 returned 545
call    1 returned 545
     6016:  150-block  0
call    2 returned 6016
branch  3 taken 5471 (fallthrough)
branch  4 taken 545
     5471:  150-block  1
call    5 returned 5471
     5471:  150-block  2
call    6 returned 5471
     5471:  151:        if('A' <= it && it <= 'Z'){
branch  0 taken 5456 (fallthrough)
branch  1 taken 15
     5456:  151-block  0
branch  2 taken 503 (fallthrough)
branch  3 taken 4953
      503:  152:            ans += it + ('a' - 'A');
      503:  152-block  0
call    0 returned 503
branch  1 taken 503 (fallthrough)
branch  2 taken 0 (throw)
      503:  152-block  1
        -:  153:        }else{
     4968:  154:            ans += it;
     4968:  154-block  0
call    0 returned 4968
branch  1 taken 4968 (fallthrough)
branch  2 taken 0 (throw)
        -:  155:        }
        -:  156:    }
      545:  157:    return ans;
      545:  157-block  0
      545:  157-block  1
        -:  158:}
        -:  159:
function _ZN15MovieControlleraSERKS_ called 12 returned 100% blocks executed 100%
       12:  160:MovieController &MovieController::operator=(const MovieController &other) {
       12:  161:    this->repository = other.repository;
       12:  161-block  0
call    0 returned 12
       12:  162:    this->watchlist = other.watchlist;
call    0 returned 12
       12:  163:    return *this;
        -:  164:}
        -:  165:
function _ZNK15MovieController17display_watchlistEv called 0 returned 0% blocks executed 0%
    #####:  166:void MovieController::display_watchlist() const {
    #####:  167:    this->watchlist.display();
    %%%%%:  167-block  0
call    0 never executed
    #####:  168:}
        -:  169:
function _ZN15MovieController25get_movies_matching_genreENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:  170:std::vector<Movie> MovieController::get_movies_matching_genre(std::string genre) {
    #####:  171:    vector<Movie> movies = this->repository.get_all();
    %%%%%:  171-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  171-block  1
call    3 never executed
    $$$$$:  171-block  2
call    4 never executed
    #####:  172:    vector<Movie> answer;
    %%%%%:  172-block  0
call    0 never executed
function _ZZN15MovieController25get_movies_matching_genreENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlR5MovieE_clES7_ called 0 returned 0% blocks executed 0%
    #####:  173:    copy_if(movies.begin(), movies.end(), back_inserter(answer), [&](Movie &movie){
    #####:  174:        return genre == "" || movie.get_genre().find(genre) != std::string::npos;
    %%%%%:  174-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  174-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:  174-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:  174-block  3
    %%%%%:  174-block  4
    %%%%%:  174-block  5
branch  9 never executed
branch 10 never executed
    %%%%%:  174-block  6
call   11 never executed
    %%%%%:  174-block  7
    %%%%%:  174-block  8
    $$$$$:  174-block  9
branch 12 never executed
branch 13 never executed
    $$$$$:  174-block 10
call   14 never executed
    #####:  175:    });
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:  175-block  0
call    3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    #####:  176:    return answer;
    %%%%%:  176-block  0
    %%%%%:  176-block  1
        -:  177:}
        -:  178:
function _ZN15MovieController4undoEv called 0 returned 0% blocks executed 0%
    #####:  179:void MovieController::undo() {
    #####:  180:    this->undo_stack.undo();
    %%%%%:  180-block  0
call    0 never executed
    #####:  181:}
        -:  182:
function _ZN15MovieController4redoEv called 0 returned 0% blocks executed 0%
    #####:  183:void MovieController::redo() {
    #####:  184:    this->undo_stack.redo();
    %%%%%:  184-block  0
call    0 never executed
    #####:  185:}
