        -:    0:Source:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/src/domain/country.c
        -:    0:Graph:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/cmake-build-debug-coverage/CMakeFiles/a3_4_georgerapeanu_tests.dir/src/domain/country.c.gcno
        -:    0:Data:/home/georgerapeanu/Desktop/ubbShit/Semester2/OOP/a3-4-georgerapeanu/cmake-build-debug-coverage/CMakeFiles/a3_4_georgerapeanu_tests.dir/src/domain/country.c.gcda
        -:    0:Runs:1
        -:    1:/*! @file country.c This file contains the implementation of the defined functions for Country.h
        -:    2: *
        -:    3: */
        -:    4:#pragma once
        -:    5:#include "../../include/domain/country.h"
        -:    6:#include <string.h>
        -:    7:#include <stdlib.h>
        -:    8:#include "../../include/domain/errors.h"
        -:    9:#include "../../include/utils/utils.h"
        -:   10:/*
        -:   11: * This implementation does exactly what it says it does in country.h
        -:   12: */
function create_country called 71 returned 100% blocks executed 47%
       71:   13:country_t* create_country(const char* name, const char* continent, int population, int* p_error){
       71:   14:    country_t* p_new_country = (country_t*)malloc(sizeof(country_t));
        -:   15:
       71:   16:    if(p_new_country == NULL){
       71:   16-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 71
    #####:   17:        delete_country(p_new_country);
    %%%%%:   17-block  0
call    0 never executed
    #####:   18:        set_error(p_error, 1);
call    0 never executed
    #####:   19:        return NULL;
        -:   20:    }
        -:   21:
       71:   22:    int tmp_error = 0;
       71:   23:    p_new_country->name = get_lowercase(name, &tmp_error);
       71:   23-block  0
call    0 returned 71
       71:   24:    if(tmp_error != 0){
branch  0 taken 0 (fallthrough)
branch  1 taken 71
    #####:   25:        set_error(p_error, 1);
    %%%%%:   25-block  0
call    0 never executed
    #####:   26:        delete_country(p_new_country);
call    0 never executed
    #####:   27:        return NULL;
        -:   28:    }
        -:   29:
       71:   30:    p_new_country->continent = get_lowercase(continent, &tmp_error);
       71:   30-block  0
call    0 returned 71
        -:   31:
       71:   32:    if(tmp_error != 0){
branch  0 taken 0 (fallthrough)
branch  1 taken 71
    #####:   33:        set_error(p_error, 1);
    %%%%%:   33-block  0
call    0 never executed
    #####:   34:        delete_country(p_new_country);
call    0 never executed
    #####:   35:        return NULL;
        -:   36:    }
        -:   37:
       71:   38:    p_new_country->population = population;
        -:   39:
       71:   40:    return p_new_country;
       71:   40-block  0
        -:   41:}
        -:   42:
        -:   43:/*
        -:   44: * This implementation does exactly what it says it does in country.h
        -:   45: */
function delete_country called 17 returned 100% blocks executed 100%
       17:   46:void delete_country(country_t* p_country){
       17:   47:    if(p_country == NULL){
       17:   47-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 16
        1:   48:        return;
        1:   48-block  0
        -:   49:    }
       16:   50:    delete_country_data(p_country);
       16:   50-block  0
call    0 returned 16
       16:   51:    free(p_country);
        -:   52:}
        -:   53:/*
        -:   54: * This implementation does exactly what it says it does in country.h
        -:   55: */
function delete_country_data called 71 returned 100% blocks executed 86%
       71:   56:void delete_country_data(country_t* p_country){
       71:   57:    if(p_country == NULL){
       71:   57-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 71
    #####:   58:        return ;
    %%%%%:   58-block  0
        -:   59:    }
       71:   60:    if(p_country->name != NULL){
       71:   60-block  0
branch  0 taken 70 (fallthrough)
branch  1 taken 1
       70:   61:        free(p_country->name);
       70:   61-block  0
        -:   62:    }
       71:   63:    if(p_country->continent != NULL){
       71:   63-block  0
branch  0 taken 70 (fallthrough)
branch  1 taken 1
       70:   64:        free(p_country->continent);
       70:   64-block  0
        -:   65:    }
        -:   66:}
